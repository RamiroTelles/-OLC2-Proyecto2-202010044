
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN BREAK CADENA CARACTER CASE CHAR COMA COMMENTBLOCK CONSOLE CONST CONTINUE CORDER CORIZQ DECIMAL DEFAULT DISTINTO DIVIDIDO DOSPUNTOS ELSE ENTERO EQUIVALENTE FALSE FLOAT FOR FUNCTION ID IF IGUAL INTERFACE INTERROGACION LLAVDER LLAVIZQ LOG MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO NOT NULL NUMBER OR PARDER PARIZQ POR PUNTO PUNTOCOMA RETURN STRING SWITCH TRUE TYPEOF VAR WHILEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccion instruccion      : imprimir_instr\n                        | declaracion\n                        | asignacion PUNTOCOMA\n                        | sIf\n                        | sWhile\n                        | sFor\n                        | sContinue\n                        | sBreak\n                        | sReturn\n                        | sSwitch\n                        | declaracion_Funcion\n                        | callFuncion PUNTOCOMA\n                        | argumento_Funcion PUNTOCOMAargumento_Funcion    : ID PUNTO ID PARIZQ venir_ExpresionesaccesoArgumento  : ID PUNTO IDcallFuncion  : ID PARIZQ venir_Expresionesvenir_Expresiones    : lista_Expresiones PARDERvenir_Expresiones    : PARDERlista_Expresiones    : lista_Expresiones COMA op_Ternariolista_Expresiones    : op_Ternariodeclaracion_Funcion  : FUNCTION ID PARIZQ parametros tipoFuncion instrucciones LLAVDERparametros   : PARDER parametros   : lista_Parametros PARDERlista_Parametros : lista_Parametros COMA ID DOSPUNTOS tipo\n                        | ID DOSPUNTOS tipolista_Parametros : lista_Parametros COMA ID DOSPUNTOS tipo CORIZQ CORDER\n                        | ID DOSPUNTOS tipo CORIZQ CORDERtipoFuncion  : DOSPUNTOS tipo LLAVIZQ\n                    | LLAVIZQsSwitch  : SWITCH PARIZQ op_Ternario PARDER LLAVIZQ listCases LLAVDERlistCases    : listCases CASE op_Ternario DOSPUNTOS instruccioneslistCases    : listCases DEFAULT DOSPUNTOS instruccioneslistCases    : CASE op_Ternario DOSPUNTOS instrucciones\n                    | DEFAULT DOSPUNTOS instruccionessContinue    : CONTINUE PUNTOCOMAsBreak    : BREAK PUNTOCOMAsReturn    : RETURN PUNTOCOMAsReturn    : RETURN op_Ternario PUNTOCOMAsFor : FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDERsWhile   : WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDERsIf  : IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2sIf2  : LLAVDER ELSE sElsesIf2  : LLAVDERsElse    : LLAVIZQ instrucciones LLAVDERsElse    : sIfasignacion   : ID IGUAL op_Ternario\n                    | ID MAS IGUAL op_Ternario\n                    | ID MENOS IGUAL op_Ternario\n                    | ID CORIZQ op_Ternario CORDER IGUAL op_Ternarioasignacion   : ID CORIZQ op_Ternario CORDER listaAccesos IGUAL op_TernariolistaAccesos : listaAccesos CORIZQ op_Ternario CORDERlistaAccesos : CORIZQ op_Ternario CORDERasignacion   : ID MAS MAS\n                    | ID MENOS MENOSdeclaracion  : tipoVar ID DOSPUNTOS tipo declaracion_explicitadeclaracion  : tipoVar ID DOSPUNTOS tipo lista_Corchetes declaracion_explicitadeclaracion  : tipoVar ID declaracion_implicitalista_Corchetes  : lista_Corchetes CORIZQ CORDERlista_Corchetes  : CORIZQ CORDERdeclaracion_explicita    : PUNTOCOMAdeclaracion_explicita    : IGUAL op_Ternario PUNTOCOMAdeclaracion_implicita    : IGUAL op_Ternario PUNTOCOMAtipoVar  : VAR\n                | CONSTtipo : NUMBERtipo : FLOATtipo : STRINGtipo : BOOLEANtipo : CHARimprimir_instr : CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMAlista_exp    : lista_exp COMA op_Ternariolista_exp    : op_Ternarioop_Ternario  : exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Orop_Ternario  : exp_Orop_Ternario  : TYPEOF op_Ternarioexp_Or   : exp_Or OR exp_Andexp_Or   : exp_Andexp_And   : exp_And AND exp_Notexp_And   : exp_Notexp_Not  : lNot exp_Compexp_Not  : exp_ComplNot : lNot NOTlNot : NOTexp_Comp : exp_Sum_Menos EQUIVALENTE exp_Sum_Menos\n                | exp_Sum_Menos DISTINTO exp_Sum_Menosexp_Comp    : exp_relexp_rel  : exp_Sum_Menos MAYOR exp_Sum_Menos\n                | exp_Sum_Menos MENOR exp_Sum_Menos\n                | exp_Sum_Menos MAYORIGUAL exp_Sum_Menos\n                | exp_Sum_Menos MENORIGUAL exp_Sum_Menosexp_rel    : exp_Sum_Menosexp_Sum_Menos    : exp_Sum_Menos MAS exp_Mul_Div\n                        | exp_Sum_Menos MENOS exp_Mul_Divexp_Sum_Menos    : exp_Mul_Divexp_Mul_Div  : exp_Mul_Div POR exp_Parentesis\n                    | exp_Mul_Div DIVIDIDO exp_Parentesis\n                    | exp_Mul_Div MODULO exp_Parentesisexp_Mul_Div    : exp_Parentesisexp_Parentesis   : PARIZQ op_Ternario PARDERexp_Parentesis   : exp_Negativoexp_Negativo : MENOS valorexp_Negativo : valorvalor    : ENTEROvalor    : CADENAvalor    : DECIMALvalor    : CARACTERvalor    : TRUE PUNTO ID PARIZQ PARDER\n                | FALSE PUNTO ID PARIZQ PARDERvalor    : TRUE\n                | FALSEvalor    : NULLvalor    : IDvalor    : callFuncionvalor    : CORIZQ lista_Expresiones CORDER\n                | CORIZQ CORDERvalor    : ID CORIZQ op_Ternario CORDERvalor    : ID CORIZQ op_Ternario CORDER listaAccesosvalor    : argumento_Funcionvalor    : accesoArgumento'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[17,17,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,17,17,17,-32,-59,17,17,17,-73,-64,-44,-46,-43,-33,17,-24,-31,17,17,17,17,-45,17,-48,17,17,17,17,17,-42,17,-47,]),'ID':([0,2,3,4,5,7,8,9,10,11,12,13,14,18,25,27,28,29,30,31,32,33,36,39,40,41,42,43,45,46,47,50,53,55,59,61,73,76,80,81,84,86,95,96,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,116,117,118,119,123,124,136,137,168,170,171,173,174,175,179,180,181,182,188,190,192,194,195,201,202,203,204,212,215,218,221,225,226,227,229,230,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[19,19,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,35,69,77,-66,-67,-2,-6,-15,-16,69,69,69,92,69,69,-38,-39,-40,69,69,-86,69,69,69,69,-60,69,69,69,69,-41,69,69,69,-85,69,69,69,69,69,69,69,69,69,69,69,156,69,158,159,162,69,69,69,-58,-63,69,-65,69,69,19,19,206,69,19,-32,217,69,-59,69,69,19,19,69,19,-73,-64,-44,-46,-43,-33,69,19,-24,-31,19,19,19,19,-45,19,-48,19,19,19,19,19,-42,19,-47,]),'IF':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,239,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[20,20,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,20,20,20,-32,-59,20,20,20,-73,-64,-44,-46,-43,-33,20,-24,-31,20,20,20,20,20,-45,20,-48,20,20,20,20,20,-42,20,-47,]),'WHILE':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[21,21,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,21,21,21,-32,-59,21,21,21,-73,-64,-44,-46,-43,-33,21,-24,-31,21,21,21,21,-45,21,-48,21,21,21,21,21,-42,21,-47,]),'FOR':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[22,22,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,22,22,22,-32,-59,22,22,22,-73,-64,-44,-46,-43,-33,22,-24,-31,22,22,22,22,-45,22,-48,22,22,22,22,22,-42,22,-47,]),'CONTINUE':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[23,23,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,23,23,23,-32,-59,23,23,23,-73,-64,-44,-46,-43,-33,23,-24,-31,23,23,23,23,-45,23,-48,23,23,23,23,23,-42,23,-47,]),'BREAK':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[24,24,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,24,24,24,-32,-59,24,24,24,-73,-64,-44,-46,-43,-33,24,-24,-31,24,24,24,24,-45,24,-48,24,24,24,24,24,-42,24,-47,]),'RETURN':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[25,25,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,25,25,25,-32,-59,25,25,25,-73,-64,-44,-46,-43,-33,25,-24,-31,25,25,25,25,-45,25,-48,25,25,25,25,25,-42,25,-47,]),'SWITCH':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[26,26,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,26,26,26,-32,-59,26,26,26,-73,-64,-44,-46,-43,-33,26,-24,-31,26,26,26,26,-45,26,-48,26,26,26,26,26,-42,26,-47,]),'FUNCTION':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[27,27,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,27,27,27,-32,-59,27,27,27,-73,-64,-44,-46,-43,-33,27,-24,-31,27,27,27,27,-45,27,-48,27,27,27,27,27,-42,27,-47,]),'VAR':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,44,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[28,28,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,28,-38,-39,-40,-60,-41,-58,-63,-65,28,28,28,-32,-59,28,28,28,-73,-64,-44,-46,-43,-33,28,-24,-31,28,28,28,28,-45,28,-48,28,28,28,28,28,-42,28,-47,]),'CONST':([0,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,44,45,46,47,80,96,168,170,173,179,180,188,190,195,203,204,215,218,221,225,226,227,229,233,235,236,240,242,243,244,247,248,249,250,251,252,253,255,256,257,259,],[29,29,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,29,-38,-39,-40,-60,-41,-58,-63,-65,29,29,29,-32,-59,29,29,29,-73,-64,-44,-46,-43,-33,29,-24,-31,29,29,29,29,-45,29,-48,29,29,29,29,29,-42,29,-47,]),'$end':([1,2,3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,195,218,221,225,226,227,229,235,247,249,256,259,],[0,-1,-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,-59,-73,-64,-44,-46,-43,-33,-24,-45,-48,-42,-47,]),'LLAVDER':([3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,195,203,204,211,215,218,221,225,226,227,229,235,244,247,249,250,252,253,255,256,257,259,],[-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,-59,226,227,229,235,-73,-64,-44,-46,-43,-33,-24,-37,-45,-48,256,-35,-36,259,-42,-34,-47,]),'CASE':([3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,186,195,211,218,221,225,226,227,229,235,244,247,249,252,253,256,257,259,],[-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,212,-59,230,-73,-64,-44,-46,-43,-33,-24,-37,-45,-48,-35,-36,-42,-34,-47,]),'DEFAULT':([3,4,5,7,8,9,10,11,12,13,14,30,31,32,33,45,46,47,80,96,168,170,173,186,195,211,218,221,225,226,227,229,235,244,247,249,252,253,256,257,259,],[-3,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-2,-6,-15,-16,-38,-39,-40,-60,-41,-58,-63,-65,213,-59,231,-73,-64,-44,-46,-43,-33,-24,-37,-45,-48,-35,-36,-42,-34,-47,]),'PUNTOCOMA':([6,15,16,23,24,25,48,49,51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,82,83,85,88,90,99,101,114,121,125,126,127,128,129,130,131,132,133,135,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,169,178,184,193,197,198,200,207,208,209,210,220,222,224,238,],[31,32,33,45,46,47,96,-77,-80,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-49,-56,-57,-19,-21,-78,-83,-104,-118,170,-68,-69,-70,-71,-72,173,-50,-51,-20,181,-79,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,-18,-117,170,-17,-119,218,221,-62,-52,-76,-110,-120,-111,-61,-55,-53,-54,]),'PUNTO':([17,19,68,69,70,],[34,41,116,118,119,]),'IGUAL':([19,35,37,38,125,126,127,128,129,130,134,169,176,198,206,220,222,238,],[36,81,84,86,171,-68,-69,-70,-71,-72,175,171,202,-62,36,-61,-55,-54,]),'MAS':([19,37,56,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,144,145,146,147,148,149,150,151,152,153,154,155,158,160,178,184,206,208,209,210,222,238,],[37,83,105,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,105,105,-95,-96,105,105,105,105,-98,-99,-100,-102,-18,-117,-17,-119,37,-110,-120,-111,-55,-54,]),'MENOS':([19,25,36,38,39,40,42,43,50,53,55,56,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,80,81,84,86,88,90,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,114,117,121,124,135,136,137,144,145,146,147,148,149,150,151,152,153,154,155,158,160,168,170,171,173,174,175,178,182,184,194,195,201,202,206,208,209,210,212,221,222,230,238,],[38,59,59,85,59,59,59,59,59,59,-86,106,-97,-101,59,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,59,-121,-122,59,-60,59,59,59,-19,-21,59,59,59,59,-85,59,59,59,59,59,59,59,59,59,59,59,-104,59,-118,59,-20,59,59,106,106,-95,-96,106,106,106,106,-98,-99,-100,-102,-18,-117,-58,-63,59,-65,59,59,-17,59,-119,59,-59,59,59,38,-110,-120,-111,59,-64,-55,59,-54,]),'CORIZQ':([19,25,36,39,40,42,43,50,53,55,59,61,69,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,125,126,127,128,129,130,134,136,137,168,169,170,171,173,174,175,176,182,184,194,195,198,201,202,206,209,212,214,220,221,222,230,238,246,],[39,73,73,73,73,73,73,73,73,-86,73,73,117,73,73,-60,73,73,73,73,73,73,73,-85,73,73,73,73,73,73,73,73,73,73,73,73,73,172,-68,-69,-70,-71,-72,174,73,73,-58,196,-63,73,-65,73,73,201,73,174,73,-59,-62,73,73,39,201,73,234,-61,-64,-55,73,-54,254,]),'PARIZQ':([19,20,21,22,25,26,36,39,40,42,43,50,53,55,61,69,73,76,77,78,80,81,84,86,92,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,156,158,159,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[40,42,43,44,61,76,61,61,61,61,61,61,61,-86,61,40,61,61,123,124,-60,61,61,61,137,61,61,61,61,-85,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,183,137,185,-58,-63,61,-65,61,61,61,61,-59,61,61,61,-64,61,]),'TYPEOF':([25,36,39,40,42,43,50,61,73,76,80,81,84,86,95,117,124,136,137,168,170,171,173,174,175,194,195,201,202,212,221,230,],[50,50,50,50,50,50,50,50,50,50,-60,50,50,50,50,50,50,50,50,-58,-63,50,-65,50,50,50,-59,50,50,50,-64,50,]),'NOT':([25,36,39,40,42,43,50,53,55,61,73,76,80,81,84,86,95,97,98,100,102,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[55,55,55,55,55,55,55,102,-86,55,55,55,-60,55,55,55,55,55,55,55,-85,55,55,55,55,-58,-63,55,-65,55,55,55,55,-59,55,55,55,-64,55,]),'ENTERO':([25,36,39,40,42,43,50,53,55,59,61,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[64,64,64,64,64,64,64,64,-86,64,64,64,64,-60,64,64,64,64,64,64,64,-85,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-58,-63,64,-65,64,64,64,64,-59,64,64,64,-64,64,]),'CADENA':([25,36,39,40,42,43,50,53,55,59,61,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[65,65,65,65,65,65,65,65,-86,65,65,65,65,-60,65,65,65,65,65,65,65,-85,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-58,-63,65,-65,65,65,65,65,-59,65,65,65,-64,65,]),'DECIMAL':([25,36,39,40,42,43,50,53,55,59,61,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[66,66,66,66,66,66,66,66,-86,66,66,66,66,-60,66,66,66,66,66,66,66,-85,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-58,-63,66,-65,66,66,66,66,-59,66,66,66,-64,66,]),'CARACTER':([25,36,39,40,42,43,50,53,55,59,61,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[67,67,67,67,67,67,67,67,-86,67,67,67,67,-60,67,67,67,67,67,67,67,-85,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-58,-63,67,-65,67,67,67,67,-59,67,67,67,-64,67,]),'TRUE':([25,36,39,40,42,43,50,53,55,59,61,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[68,68,68,68,68,68,68,68,-86,68,68,68,68,-60,68,68,68,68,68,68,68,-85,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-58,-63,68,-65,68,68,68,68,-59,68,68,68,-64,68,]),'FALSE':([25,36,39,40,42,43,50,53,55,59,61,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[70,70,70,70,70,70,70,70,-86,70,70,70,70,-60,70,70,70,70,70,70,70,-85,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-58,-63,70,-65,70,70,70,70,-59,70,70,70,-64,70,]),'NULL':([25,36,39,40,42,43,50,53,55,59,61,73,76,80,81,84,86,95,97,98,100,102,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,168,170,171,173,174,175,182,194,195,201,202,212,221,230,],[71,71,71,71,71,71,71,71,-86,71,71,71,71,-60,71,71,71,71,71,71,71,-85,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-58,-63,71,-65,71,71,71,71,-59,71,71,71,-64,71,]),'LOG':([34,],[78,]),'DOSPUNTOS':([35,49,51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,99,101,114,121,135,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,178,184,191,207,208,209,210,213,217,222,231,232,238,241,],[79,-77,-80,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-78,-83,-104,-118,-20,182,-79,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,-18,-117,187,189,-25,-17,-119,-26,-76,-110,-120,-111,233,237,-55,242,243,-54,251,]),'PARDER':([40,49,51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,82,83,85,88,89,90,91,93,94,99,101,114,115,121,122,123,126,127,128,129,130,132,133,135,137,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,165,166,167,177,178,183,184,185,200,205,207,208,209,210,214,219,222,224,238,245,246,258,],[90,-77,-80,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-49,-56,-57,-19,135,-21,-23,138,139,-78,-83,-104,155,-118,161,164,-68,-69,-70,-71,-72,-50,-51,-20,90,-79,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,-18,-117,191,193,-75,-22,-17,208,-119,210,-52,228,-76,-110,-120,-111,-28,-74,-55,-53,-54,-30,-27,-29,]),'INTERROGACION':([49,51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,101,114,121,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,178,184,208,209,210,222,238,],[97,-80,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-83,-104,-118,-20,-79,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'CORDER':([49,51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,87,88,90,91,99,101,114,120,121,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,160,172,177,178,184,196,199,207,208,209,210,222,223,234,238,254,],[-77,-80,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,121,-121,-122,134,-19,-21,-23,-78,-83,-104,160,-118,-20,-79,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,184,-18,-117,198,-22,-17,-119,220,222,-76,-110,-120,-111,-55,238,245,-54,258,]),'COMA':([49,51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,89,90,91,99,101,114,120,121,126,127,128,129,130,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,165,166,167,177,178,184,207,208,209,210,214,219,222,238,245,246,258,],[-77,-80,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,136,-21,-23,-78,-83,-104,136,-118,-68,-69,-70,-71,-72,-20,-79,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,-18,-117,192,194,-75,-22,-17,-119,-76,-110,-120,-111,-28,-74,-55,-54,-30,-27,-29,]),'OR':([49,51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,101,114,121,135,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,178,184,207,208,209,210,222,238,],[98,-80,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-83,-104,-118,-20,98,-79,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,-18,-117,-17,-119,98,-110,-120,-111,-55,-54,]),'AND':([51,52,54,56,57,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,101,114,121,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,178,184,208,209,210,222,238,],[100,-82,-84,-94,-89,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-83,-104,-118,-20,100,-81,-87,-88,-95,-96,-90,-91,-92,-93,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'EQUIVALENTE':([56,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[103,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,-95,-96,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'DISTINTO':([56,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[104,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,-95,-96,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'MAYOR':([56,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[107,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,-95,-96,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'MENOR':([56,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[108,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,-95,-96,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'MAYORIGUAL':([56,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[109,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,-95,-96,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'MENORIGUAL':([56,58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[110,-97,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,-95,-96,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'POR':([58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[111,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,111,111,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'DIVIDIDO':([58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[112,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,112,112,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'MODULO':([58,60,62,63,64,65,66,67,68,69,70,71,72,74,75,88,90,114,121,135,146,147,152,153,154,155,158,160,178,184,208,209,210,222,238,],[113,-101,-103,-105,-106,-107,-108,-109,-112,-115,-113,-114,-116,-121,-122,-19,-21,-104,-118,-20,113,113,-98,-99,-100,-102,-18,-117,-17,-119,-110,-120,-111,-55,-54,]),'NUMBER':([79,187,189,237,],[126,126,126,126,]),'FLOAT':([79,187,189,237,],[127,127,127,127,]),'STRING':([79,187,189,237,],[128,128,128,128,]),'BOOLEAN':([79,187,189,237,],[129,129,129,129,]),'CHAR':([79,187,189,237,],[130,130,130,130,]),'LLAVIZQ':([126,127,128,129,130,138,139,161,163,164,191,216,228,239,],[-68,-69,-70,-71,-72,179,180,186,190,-25,-26,236,240,248,]),'ELSE':([226,],[239,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,179,180,188,233,240,242,243,248,251,],[2,203,204,215,244,250,252,253,255,257,]),'instruccion':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[3,30,3,3,3,30,30,30,3,3,3,3,30,3,30,3,30,30,30,30,]),'imprimir_instr':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'declaracion':([0,2,44,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[5,5,95,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'asignacion':([0,2,179,180,181,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[6,6,6,6,205,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'sIf':([0,2,179,180,188,203,204,215,233,239,240,242,243,244,248,250,251,252,253,255,257,],[7,7,7,7,7,7,7,7,7,249,7,7,7,7,7,7,7,7,7,7,7,]),'sWhile':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'sFor':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'sContinue':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'sBreak':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'sReturn':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'sSwitch':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'declaracion_Funcion':([0,2,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'callFuncion':([0,2,25,36,39,40,42,43,50,53,59,61,73,76,81,84,86,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,171,174,175,179,180,182,188,194,201,202,203,204,212,215,230,233,240,242,243,244,248,250,251,252,253,255,257,],[15,15,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,15,15,72,15,72,72,72,15,15,72,15,72,15,15,15,15,15,15,15,15,15,15,15,15,]),'argumento_Funcion':([0,2,25,36,39,40,42,43,50,53,59,61,73,76,81,84,86,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,171,174,175,179,180,182,188,194,201,202,203,204,212,215,230,233,240,242,243,244,248,250,251,252,253,255,257,],[16,16,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,16,16,74,16,74,74,74,16,16,74,16,74,16,16,16,16,16,16,16,16,16,16,16,16,]),'tipoVar':([0,2,44,179,180,188,203,204,215,233,240,242,243,244,248,250,251,252,253,255,257,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'op_Ternario':([25,36,39,40,42,43,50,61,73,76,81,84,86,95,117,124,136,137,171,174,175,194,201,202,212,230,],[48,82,87,91,93,94,99,115,91,122,131,132,133,140,157,167,177,91,197,199,200,219,223,224,232,241,]),'exp_Or':([25,36,39,40,42,43,50,61,73,76,81,84,86,95,97,117,124,136,137,171,174,175,182,194,201,202,212,230,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,141,49,49,49,49,49,49,49,207,49,49,49,49,49,]),'exp_And':([25,36,39,40,42,43,50,61,73,76,81,84,86,95,97,98,117,124,136,137,171,174,175,182,194,201,202,212,230,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,142,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'exp_Not':([25,36,39,40,42,43,50,61,73,76,81,84,86,95,97,98,100,117,124,136,137,171,174,175,182,194,201,202,212,230,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,143,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'lNot':([25,36,39,40,42,43,50,61,73,76,81,84,86,95,97,98,100,117,124,136,137,171,174,175,182,194,201,202,212,230,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'exp_Comp':([25,36,39,40,42,43,50,53,61,73,76,81,84,86,95,97,98,100,117,124,136,137,171,174,175,182,194,201,202,212,230,],[54,54,54,54,54,54,54,101,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'exp_Sum_Menos':([25,36,39,40,42,43,50,53,61,73,76,81,84,86,95,97,98,100,103,104,107,108,109,110,117,124,136,137,171,174,175,182,194,201,202,212,230,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,144,145,148,149,150,151,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'exp_rel':([25,36,39,40,42,43,50,53,61,73,76,81,84,86,95,97,98,100,117,124,136,137,171,174,175,182,194,201,202,212,230,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'exp_Mul_Div':([25,36,39,40,42,43,50,53,61,73,76,81,84,86,95,97,98,100,103,104,105,106,107,108,109,110,117,124,136,137,171,174,175,182,194,201,202,212,230,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,146,147,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'exp_Parentesis':([25,36,39,40,42,43,50,53,61,73,76,81,84,86,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,171,174,175,182,194,201,202,212,230,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,152,153,154,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'exp_Negativo':([25,36,39,40,42,43,50,53,61,73,76,81,84,86,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,171,174,175,182,194,201,202,212,230,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'valor':([25,36,39,40,42,43,50,53,59,61,73,76,81,84,86,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,171,174,175,182,194,201,202,212,230,],[63,63,63,63,63,63,63,63,114,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'accesoArgumento':([25,36,39,40,42,43,50,53,59,61,73,76,81,84,86,95,97,98,100,103,104,105,106,107,108,109,110,111,112,113,117,124,136,137,171,174,175,182,194,201,202,212,230,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'declaracion_implicita':([35,],[80,]),'venir_Expresiones':([40,137,],[88,178,]),'lista_Expresiones':([40,73,137,],[89,120,89,]),'tipo':([79,187,189,237,],[125,214,216,246,]),'parametros':([123,],[163,]),'lista_Parametros':([123,],[165,]),'lista_exp':([124,],[166,]),'declaracion_explicita':([125,169,],[168,195,]),'lista_Corchetes':([125,],[169,]),'listaAccesos':([134,184,],[176,209,]),'tipoFuncion':([163,],[188,]),'listCases':([186,],[211,]),'sIf2':([203,],[225,]),'sElse':([239,],[247,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',177),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','gramatica.py',181),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','gramatica.py',186),
  ('instruccion -> imprimir_instr','instruccion',1,'p_instruccion','gramatica.py',190),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','gramatica.py',191),
  ('instruccion -> asignacion PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',192),
  ('instruccion -> sIf','instruccion',1,'p_instruccion','gramatica.py',193),
  ('instruccion -> sWhile','instruccion',1,'p_instruccion','gramatica.py',194),
  ('instruccion -> sFor','instruccion',1,'p_instruccion','gramatica.py',195),
  ('instruccion -> sContinue','instruccion',1,'p_instruccion','gramatica.py',196),
  ('instruccion -> sBreak','instruccion',1,'p_instruccion','gramatica.py',197),
  ('instruccion -> sReturn','instruccion',1,'p_instruccion','gramatica.py',198),
  ('instruccion -> sSwitch','instruccion',1,'p_instruccion','gramatica.py',199),
  ('instruccion -> declaracion_Funcion','instruccion',1,'p_instruccion','gramatica.py',200),
  ('instruccion -> callFuncion PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',201),
  ('instruccion -> argumento_Funcion PUNTOCOMA','instruccion',2,'p_instruccion','gramatica.py',202),
  ('argumento_Funcion -> ID PUNTO ID PARIZQ venir_Expresiones','argumento_Funcion',5,'p_callArgumento_Funcion','gramatica.py',206),
  ('accesoArgumento -> ID PUNTO ID','accesoArgumento',3,'p_accesoArgumento','gramatica.py',224),
  ('callFuncion -> ID PARIZQ venir_Expresiones','callFuncion',3,'p_callFuncion','gramatica.py',230),
  ('venir_Expresiones -> lista_Expresiones PARDER','venir_Expresiones',2,'p_venir_Expresiones1','gramatica.py',239),
  ('venir_Expresiones -> PARDER','venir_Expresiones',1,'p_venir_Expresiones2','gramatica.py',243),
  ('lista_Expresiones -> lista_Expresiones COMA op_Ternario','lista_Expresiones',3,'p_lista_Expresiones1','gramatica.py',249),
  ('lista_Expresiones -> op_Ternario','lista_Expresiones',1,'p_lista_Expresiones2','gramatica.py',254),
  ('declaracion_Funcion -> FUNCTION ID PARIZQ parametros tipoFuncion instrucciones LLAVDER','declaracion_Funcion',7,'p_declaracion_funcion','gramatica.py',258),
  ('parametros -> PARDER','parametros',1,'p_parametros1','gramatica.py',262),
  ('parametros -> lista_Parametros PARDER','parametros',2,'p_parametros2','gramatica.py',266),
  ('lista_Parametros -> lista_Parametros COMA ID DOSPUNTOS tipo','lista_Parametros',5,'p_lista_Parametros1','gramatica.py',270),
  ('lista_Parametros -> ID DOSPUNTOS tipo','lista_Parametros',3,'p_lista_Parametros1','gramatica.py',271),
  ('lista_Parametros -> lista_Parametros COMA ID DOSPUNTOS tipo CORIZQ CORDER','lista_Parametros',7,'p_lista_Parametros2','gramatica.py',280),
  ('lista_Parametros -> ID DOSPUNTOS tipo CORIZQ CORDER','lista_Parametros',5,'p_lista_Parametros2','gramatica.py',281),
  ('tipoFuncion -> DOSPUNTOS tipo LLAVIZQ','tipoFuncion',3,'p_tipoFuncion','gramatica.py',290),
  ('tipoFuncion -> LLAVIZQ','tipoFuncion',1,'p_tipoFuncion','gramatica.py',291),
  ('sSwitch -> SWITCH PARIZQ op_Ternario PARDER LLAVIZQ listCases LLAVDER','sSwitch',7,'p_sSwitch','gramatica.py',300),
  ('listCases -> listCases CASE op_Ternario DOSPUNTOS instrucciones','listCases',5,'p_listCases1','gramatica.py',304),
  ('listCases -> listCases DEFAULT DOSPUNTOS instrucciones','listCases',4,'p_listCases2','gramatica.py',311),
  ('listCases -> CASE op_Ternario DOSPUNTOS instrucciones','listCases',4,'p_listCases3','gramatica.py',318),
  ('listCases -> DEFAULT DOSPUNTOS instrucciones','listCases',3,'p_listCases3','gramatica.py',319),
  ('sContinue -> CONTINUE PUNTOCOMA','sContinue',2,'p_sContinue','gramatica.py',330),
  ('sBreak -> BREAK PUNTOCOMA','sBreak',2,'p_sBreak','gramatica.py',334),
  ('sReturn -> RETURN PUNTOCOMA','sReturn',2,'p_sReturn1','gramatica.py',338),
  ('sReturn -> RETURN op_Ternario PUNTOCOMA','sReturn',3,'p_sReturn2','gramatica.py',342),
  ('sFor -> FOR PARIZQ declaracion op_Ternario PUNTOCOMA asignacion PARDER LLAVIZQ instrucciones LLAVDER','sFor',10,'p_sFor','gramatica.py',346),
  ('sWhile -> WHILE PARIZQ op_Ternario PARDER LLAVIZQ instrucciones LLAVDER','sWhile',7,'p_sWhile','gramatica.py',350),
  ('sIf -> IF PARIZQ op_Ternario PARDER LLAVIZQ instrucciones sIf2','sIf',7,'p_sIf1','gramatica.py',354),
  ('sIf2 -> LLAVDER ELSE sElse','sIf2',3,'p_sIf2_1','gramatica.py',358),
  ('sIf2 -> LLAVDER','sIf2',1,'p_sIf2_2','gramatica.py',362),
  ('sElse -> LLAVIZQ instrucciones LLAVDER','sElse',3,'p_sElse1','gramatica.py',366),
  ('sElse -> sIf','sElse',1,'p_sElse2','gramatica.py',370),
  ('asignacion -> ID IGUAL op_Ternario','asignacion',3,'p_asignacion1','gramatica.py',374),
  ('asignacion -> ID MAS IGUAL op_Ternario','asignacion',4,'p_asignacion1','gramatica.py',375),
  ('asignacion -> ID MENOS IGUAL op_Ternario','asignacion',4,'p_asignacion1','gramatica.py',376),
  ('asignacion -> ID CORIZQ op_Ternario CORDER IGUAL op_Ternario','asignacion',6,'p_asignacion1','gramatica.py',377),
  ('asignacion -> ID CORIZQ op_Ternario CORDER listaAccesos IGUAL op_Ternario','asignacion',7,'p_asignacion3','gramatica.py',389),
  ('listaAccesos -> listaAccesos CORIZQ op_Ternario CORDER','listaAccesos',4,'p_listaAccesos1','gramatica.py',395),
  ('listaAccesos -> CORIZQ op_Ternario CORDER','listaAccesos',3,'p_listaAccesos2','gramatica.py',400),
  ('asignacion -> ID MAS MAS','asignacion',3,'p_asignacion2','gramatica.py',404),
  ('asignacion -> ID MENOS MENOS','asignacion',3,'p_asignacion2','gramatica.py',405),
  ('declaracion -> tipoVar ID DOSPUNTOS tipo declaracion_explicita','declaracion',5,'p_declaracion1','gramatica.py',413),
  ('declaracion -> tipoVar ID DOSPUNTOS tipo lista_Corchetes declaracion_explicita','declaracion',6,'p_declaracion2','gramatica.py',422),
  ('declaracion -> tipoVar ID declaracion_implicita','declaracion',3,'p_declaracion3','gramatica.py',430),
  ('lista_Corchetes -> lista_Corchetes CORIZQ CORDER','lista_Corchetes',3,'p_Lista_Corchetes1','gramatica.py',437),
  ('lista_Corchetes -> CORIZQ CORDER','lista_Corchetes',2,'p_Lista_Corchetes2','gramatica.py',441),
  ('declaracion_explicita -> PUNTOCOMA','declaracion_explicita',1,'p_declaracion_explicita1','gramatica.py',445),
  ('declaracion_explicita -> IGUAL op_Ternario PUNTOCOMA','declaracion_explicita',3,'p_declaracion_explicita2','gramatica.py',449),
  ('declaracion_implicita -> IGUAL op_Ternario PUNTOCOMA','declaracion_implicita',3,'p_declaracion_implicita','gramatica.py',454),
  ('tipoVar -> VAR','tipoVar',1,'p_tipoVar','gramatica.py',458),
  ('tipoVar -> CONST','tipoVar',1,'p_tipoVar','gramatica.py',459),
  ('tipo -> NUMBER','tipo',1,'p_tipoNumber','gramatica.py',464),
  ('tipo -> FLOAT','tipo',1,'p_tipoFloat','gramatica.py',468),
  ('tipo -> STRING','tipo',1,'p_tipoString','gramatica.py',472),
  ('tipo -> BOOLEAN','tipo',1,'p_tipoBoolean','gramatica.py',476),
  ('tipo -> CHAR','tipo',1,'p_tipoChar','gramatica.py',480),
  ('imprimir_instr -> CONSOLE PUNTO LOG PARIZQ lista_exp PARDER PUNTOCOMA','imprimir_instr',7,'p_instruccion_console','gramatica.py',486),
  ('lista_exp -> lista_exp COMA op_Ternario','lista_exp',3,'p_lista_exp1','gramatica.py',490),
  ('lista_exp -> op_Ternario','lista_exp',1,'p_lista_exp2','gramatica.py',495),
  ('op_Ternario -> exp_Or INTERROGACION exp_Or DOSPUNTOS exp_Or','op_Ternario',5,'p_op_Ternario1','gramatica.py',499),
  ('op_Ternario -> exp_Or','op_Ternario',1,'p_op_Ternario2','gramatica.py',503),
  ('op_Ternario -> TYPEOF op_Ternario','op_Ternario',2,'p_op_Ternario3','gramatica.py',507),
  ('exp_Or -> exp_Or OR exp_And','exp_Or',3,'p_exp_Or1','gramatica.py',511),
  ('exp_Or -> exp_And','exp_Or',1,'p_exp_Or2','gramatica.py',516),
  ('exp_And -> exp_And AND exp_Not','exp_And',3,'p_exp_And1','gramatica.py',520),
  ('exp_And -> exp_Not','exp_And',1,'p_exp_And2','gramatica.py',524),
  ('exp_Not -> lNot exp_Comp','exp_Not',2,'p_exp_Not1','gramatica.py',530),
  ('exp_Not -> exp_Comp','exp_Not',1,'p_expNot2','gramatica.py',537),
  ('lNot -> lNot NOT','lNot',2,'p_listaNot1','gramatica.py',541),
  ('lNot -> NOT','lNot',1,'p_listaNot2','gramatica.py',545),
  ('exp_Comp -> exp_Sum_Menos EQUIVALENTE exp_Sum_Menos','exp_Comp',3,'p_exp_Comp1','gramatica.py',549),
  ('exp_Comp -> exp_Sum_Menos DISTINTO exp_Sum_Menos','exp_Comp',3,'p_exp_Comp1','gramatica.py',550),
  ('exp_Comp -> exp_rel','exp_Comp',1,'p_exp_Comp2','gramatica.py',555),
  ('exp_rel -> exp_Sum_Menos MAYOR exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',559),
  ('exp_rel -> exp_Sum_Menos MENOR exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',560),
  ('exp_rel -> exp_Sum_Menos MAYORIGUAL exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',561),
  ('exp_rel -> exp_Sum_Menos MENORIGUAL exp_Sum_Menos','exp_rel',3,'p_exp_rel1','gramatica.py',562),
  ('exp_rel -> exp_Sum_Menos','exp_rel',1,'p_exp_rel2','gramatica.py',569),
  ('exp_Sum_Menos -> exp_Sum_Menos MAS exp_Mul_Div','exp_Sum_Menos',3,'p_exp_sum_menos1','gramatica.py',573),
  ('exp_Sum_Menos -> exp_Sum_Menos MENOS exp_Mul_Div','exp_Sum_Menos',3,'p_exp_sum_menos1','gramatica.py',574),
  ('exp_Sum_Menos -> exp_Mul_Div','exp_Sum_Menos',1,'p_exp_Sum_Menos2','gramatica.py',580),
  ('exp_Mul_Div -> exp_Mul_Div POR exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',585),
  ('exp_Mul_Div -> exp_Mul_Div DIVIDIDO exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',586),
  ('exp_Mul_Div -> exp_Mul_Div MODULO exp_Parentesis','exp_Mul_Div',3,'p_exp_Mul_Div1','gramatica.py',587),
  ('exp_Mul_Div -> exp_Parentesis','exp_Mul_Div',1,'p_exp_Mul_Div2','gramatica.py',593),
  ('exp_Parentesis -> PARIZQ op_Ternario PARDER','exp_Parentesis',3,'p_exp_Parentesis1','gramatica.py',597),
  ('exp_Parentesis -> exp_Negativo','exp_Parentesis',1,'p_exp_Parentesis2','gramatica.py',601),
  ('exp_Negativo -> MENOS valor','exp_Negativo',2,'p_exp_Negativo1','gramatica.py',605),
  ('exp_Negativo -> valor','exp_Negativo',1,'p_exp_Negativo2','gramatica.py',609),
  ('valor -> ENTERO','valor',1,'p_valorEntero','gramatica.py',614),
  ('valor -> CADENA','valor',1,'p_valorCadena','gramatica.py',618),
  ('valor -> DECIMAL','valor',1,'p_valorDecimal','gramatica.py',622),
  ('valor -> CARACTER','valor',1,'p_valorCaracter','gramatica.py',626),
  ('valor -> TRUE PUNTO ID PARIZQ PARDER','valor',5,'p_valorBooleanToString','gramatica.py',630),
  ('valor -> FALSE PUNTO ID PARIZQ PARDER','valor',5,'p_valorBooleanToString','gramatica.py',631),
  ('valor -> TRUE','valor',1,'p_valorBoolean','gramatica.py',637),
  ('valor -> FALSE','valor',1,'p_valorBoolean','gramatica.py',638),
  ('valor -> NULL','valor',1,'p_valorNull','gramatica.py',642),
  ('valor -> ID','valor',1,'p_valorId','gramatica.py',646),
  ('valor -> callFuncion','valor',1,'p_valorCallFuncion','gramatica.py',650),
  ('valor -> CORIZQ lista_Expresiones CORDER','valor',3,'p_valorArrayList','gramatica.py',654),
  ('valor -> CORIZQ CORDER','valor',2,'p_valorArrayList','gramatica.py',655),
  ('valor -> ID CORIZQ op_Ternario CORDER','valor',4,'p_valorAccesoArray','gramatica.py',662),
  ('valor -> ID CORIZQ op_Ternario CORDER listaAccesos','valor',5,'p_valorAccesoMatriz','gramatica.py',666),
  ('valor -> argumento_Funcion','valor',1,'p_valorCallArgumento_Funcion','gramatica.py',674),
  ('valor -> accesoArgumento','valor',1,'p_valorAccesoArgumento','gramatica.py',678),
]
